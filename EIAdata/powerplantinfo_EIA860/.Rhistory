model <- allmodels[[s]][[t]][[g]][[i]]
# make projections
if (i == 5) {
# different style of predict for BART
mlproj[,i+2] <- predict(model, seasondata[, which(names(seasondata) %in% model$training_data_features)])
} else {
mlproj[,i+2] <- predict(model, seasondata)
}
}
# create ML model ensemble
ensembledata <- data.frame('rf' = mlproj$rf, 'bart' = mlproj$bart, 'svm' = mlproj$svm, 'mars' = mlproj$mars)
names(ensembledata)[4] <- 'mars'
weights <- data.frame(models = c('rf', 'bart', 'svm', 'mars'), weights = c(0.32, 0.26, 0.28, 0.14))
mlproj$ensemble <- ensembledata %>%  rowwise() %>% mutate(wt_avg = weighted.mean(c(rf, bart, svm, mars), weights$weights), .keep = "none")
# store projections by source
sourceproj[[names(allmodels[[s]][[t]])[g]]] <- mlproj
# account for some state without all three sources
if (length(alldata[[s]]) == 17 & g == 2) {
break
}
}
# store projections by season
seasonproj[[seasonnames[t]]] <- sourceproj
}
# store projections by scenario
scenarioproj[[scenarios[c]]] <- seasonproj
}
# store projections by GCM
gcmproj[[gcms[m]]] <- scenarioproj
}
# store projections by state
projections[[stateids[s]]] <- gcmproj
}
View(projections)
setwd(rdatadir)
save(projections, file = "projectionsresults.RData")
rm(list=ls())
options(scipen = 999)
options(java.parameters = "-Xmx2500m")
datadir1 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/EIAelec/monthlygenerationdata_EIA923'
datadir2 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/NARR/CONUS'
datadir3 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/CensusData'
datadir4 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/futureClimate/CMIP6_CONUS'
rdatadir <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/2024_25/papers/RenewableEnergy/fourstates/rdatafiles'
# OPTIONAL: create an output directory for any any non-rdata output files (e.g., csv, pdf, etc.)
outputdir <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/2024_25/papers/RenewableEnergy/fourstates/figures/'
setwd(rdatadir)
load('projections.RData')
load('projectionsresults.RData')
View(projections)
length(projections)
length(projections[[s]])
s <- 1
s <- 1
length(projections[[s]])
m <- 1
length(projections[[s]][[m]])
c <- 1
length(projections[[s]][[m]][[c]])
t <- 1
length(projections[[s]][[m]][[c]][[t]])
# extract data
sourcedata <- projections[[s]][[m]][[c]][[t]][[g]]
g <- 1
# extract data
sourcedata <- projections[[s]][[m]][[c]][[t]][[g]]
View(sourcedata)
# get "current" data (2001-2020)
currentdata <- sourcedata[which(sourcedata$year >=2001 & sourcedata$year <= 2020),]
View(currentdata)
# get future data (2041-2060)
futuredata <- sourcedata[which(sourcedata$year >=2041 & sourcedata$year <= 2060),]
mean(currentdata)
colMeans(currentdata)
colMeans(currentdata[,3:10])
(colMeans(future[,3:10]) - colMeans(currentdata[,3:10]))
(colMeans(futuredata[,3:10]) - colMeans(currentdata[,3:10]))
(colMeans(futuredata[,3:10]) - colMeans(currentdata[,3:10]))/colMeans(currentdata[,3:10])
((colMeans(futuredata[,3:10]) - colMeans(currentdata[,3:10]))/colMeans(currentdata[,3:10]))*100
setwd(rdatadir)
load('cleaneddata.RData')      # includes GCM data
load('modelrunresults.RData')  # includes ML models
View(allmodels)
# labels
stateids <- c('CA', 'NY', 'FL', 'GA')
gcms <- c('gfdl-esm4', 'ipsl-cm6a-lr', 'mpi-esm1-2-hr', 'mri-esm2-0', 'ukesm1-0-ll', 'ensemble')
scenarios <- c('ssp126', 'ssp585')
seasonindices <- list(c(4:9), c(10:12,1:3)) # summer, winter
seasonnames <- c('summer', 'winter')
mlmodels <- c('glm', 'mars', 'cart', 'rf', 'bart', 'svm')
# initialize variables
projections <- list()
# loop through each state
for (s in 1:4) {
# initialize variables
gcmproj <- list()
# loop through each climate model
for (m in 1:6) {
# initialize variables
scenarioproj <- list()
# loop through scenarios
for (c in 1:2) {
# get data from CMIP6 dataframe for each [[state]][[gcm]][[scenario]]
futuredata <- monthlyCMIP6data[[s]][[m]][[c]]
# initialize variables
seasonproj <- list()
# loop through each season in the ML model dataset
for (t in 1:2) {
# get season data
seasondata <- futuredata[which(futuredata$Month %in% seasonindices[[t]]),]
# initialize variables
sourceproj <- list()
# loop through each source
for (g in 1:3) {
# initialize variables
n <- nrow(seasondata)
mlproj <- data.frame(year = seasondata$Year, month = seasondata$Month, glm = double(n), mars = double(n), cart = double(n), rf = double(n), bart = double(n), svm = double(n), ensemble = double(n))
# loop through each ML model except mean-only
for (i in 1:6) {
# extract model
model <- allmodels[[s]][[t]][[g]][[i]]
# make projections
if (i == 5) {
# different style of predict for BART
mlproj[,i+2] <- predict(model, seasondata[, which(names(seasondata) %in% model$training_data_features)])
} else {
mlproj[,i+2] <- predict(model, seasondata)
}
}
# create ML model ensemble
ensembledata <- data.frame('rf' = mlproj$rf, 'bart' = mlproj$bart, 'svm' = mlproj$svm, 'mars' = mlproj$mars)
names(ensembledata)[4] <- 'mars'
weights <- data.frame(models = c('rf', 'bart', 'svm', 'mars'), weights = c(0.32, 0.26, 0.28, 0.14))
mlproj$ensemble <- ensembledata %>%  rowwise() %>% mutate(wt_avg = weighted.mean(c(rf, bart, svm, mars), weights$weights), .keep = "none")
# store projections by source
sourceproj[[names(allmodels[[s]][[t]])[g]]] <- mlproj
# account for some state without all three sources
if (length(alldata[[s]]) == 17 & g == 2) {
break
}
}
# store projections by season
seasonproj[[seasonnames[t]]] <- sourceproj
}
# store projections by scenario
scenarioproj[[scenarios[c]]] <- seasonproj
}
# store projections by GCM
gcmproj[[gcms[m]]] <- scenarioproj
}
# store projections by state
projections[[stateids[s]]] <- gcmproj
}
View(projections)
setwd(rdatadir)
save(projections, file = "projectionsresults.RData")
rm(list=ls())
options(scipen = 999)
options(java.parameters = "-Xmx2500m")
datadir1 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/EIAelec/monthlygenerationdata_EIA923'
datadir2 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/NARR/CONUS'
datadir3 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/CensusData'
datadir4 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/futureClimate/CMIP6_CONUS'
rdatadir <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/2024_25/papers/RenewableEnergy/fourstates/rdatafiles'
# OPTIONAL: create an output directory for any any non-rdata output files (e.g., csv, pdf, etc.)
outputdir <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/2024_25/papers/RenewableEnergy/fourstates/figures/'
setwd(rdatadir)
load('projectionsresults.RData')
# loop through each state
for (s in 1:length(projections)) {
# loop through each gcm
for (m in 1:length(projections[[s]])) {
# loop through each scenario
for (c in 1:length(projections[[s]][[m]])) {
#loop through each season
for (t in 1:length(projections[[s]][[m]][[c]])) {
# loop through each source
for (g in 1:length(projections[[s]][[m]][[c]][[t]])) {
# extract data
sourcedata <- projections[[s]][[m]][[c]][[t]][[g]]
# loop through each ML model
for (i in 1:8) {
# get current data (2001-2020)
currentdata <- sourcedata[which(sourcedata$year >=2001 & sourcedata$year <= 2020),]
# get future data (2041-2060)
futuredata <- sourcedata[which(sourcedata$year >=2041 & sourcedata$year <= 2060),]
# percent change (pos == % increase) [future-current/current]
mlpc <- ((colMeans(futuredata[,3:10]) - colMeans(currentdata[,3:10]))/colMeans(currentdata[,3:10]))*100
}
}
}
}
}
}
# percent change (pos == % increase) [future-current/current]
mlpc <- ((colMeans(futuredata[,3:9]) - colMeans(currentdata[,3:9]))/colMeans(currentdata[,3:9]))*100
mlpc
# labels
stateids <- c('CA', 'NY', 'FL', 'GA')
gcms <- c('gfdl-esm4', 'ipsl-cm6a-lr', 'mpi-esm1-2-hr', 'mri-esm2-0', 'ukesm1-0-ll', 'ensemble')
scenarios <- c('ssp126', 'ssp585')
seasonindices <- list(c(4:9), c(10:12,1:3)) # summer, winter
seasonnames <- c('summer', 'winter')
names(projections[[s]][[m]][[c]][[t]])[g]
# initialize variables
percentchange <- list()
# loop through each state
for (s in 1:length(projections)) {
# initialize variables
gcmpc <- list()
# loop through each gcm
for (m in 1:length(projections[[s]])) {
# initialize variables
scenariopc <- list()
# loop through each scenario
for (c in 1:length(projections[[s]][[m]])) {
# initialize variables
seasonpc <- list()
#loop through each season
for (t in 1:length(projections[[s]][[m]][[c]])) {
# initialize variables
sourcepc <- list()
# loop through each source
for (g in 1:length(projections[[s]][[m]][[c]][[t]])) {
# extract data
sourcedata <- projections[[s]][[m]][[c]][[t]][[g]]
# get current data (2001-2020)
currentdata <- sourcedata[which(sourcedata$year >=2001 & sourcedata$year <= 2020),]
# get future data (2041-2060)
futuredata <- sourcedata[which(sourcedata$year >=2041 & sourcedata$year <= 2060),]
# percent change (pos == % increase) [future-current/current]
mlpc <- ((colMeans(futuredata[,3:9]) - colMeans(currentdata[,3:9]))/colMeans(currentdata[,3:9]))*100
# store data for each source
sourcepc[[names(projections[[s]][[m]][[c]][[t]])[g]]] <- mlpc
}
# store data for each season
seasonpc[[seasonnames[t]]] <- sourcepc
}
# store data for each scenario
scenariopc[[scenarios[c]]] <- seasonpc
}
# store data for each GCM
gcmpc[[gcms[m]]] <- scenariopc
}
# store data for each state
percentchange[[stateids[s]]] <- gcmpc
}
View(percentchange)
setwd(rdatadir)
save(percentchange, file = "percentchange.RData")
rm(list=ls())
options(scipen = 999)
options(java.parameters = "-Xmx2500m")
datadir1 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/EIAelec/monthlygenerationdata_EIA923'
datadir2 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/NARR/CONUS'
datadir3 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/CensusData'
datadir4 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/futureClimate/CMIP6_CONUS'
rdatadir <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/2024_25/papers/RenewableEnergy/fourstates/rdatafiles'
# OPTIONAL: create an output directory for any any non-rdata output files (e.g., csv, pdf, etc.)
outputdir <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/2024_25/papers/RenewableEnergy/fourstates/figures/'
# NARR data
setwd(datadir2)
narrdata <- list()
narrdatanames <- c()
filenames <- list.files(pattern="*.txt", full.names=F)
for (i in 1:length(filenames)) {
narrdata[[i]] <- read.table(paste(datadir2, '/', filenames[i], sep = ""), header=T, fill = TRUE, stringsAsFactors = F)
narrdatanames[i] <- str_remove(filenames[i],'.txt')
names(narrdata[[i]])[c(1,2)] <- c('Year', 'Month')
}
# CMIP6 data
setwd(datadir4)
cmip6data <- list()
cmip6datanames <- c()
filenames <- list.files(pattern="*.txt", full.names=F)
for (i in 1:length(filenames)) {
cmip6data[[i]] <- read.table(paste(datadir4, '/', filenames[i], sep = ""), header=T, fill = TRUE, stringsAsFactors = F)
cmip6datanames[i] <- str_remove(filenames[i],'.txt')
names(cmip6data[[i]])[c(1:3)] <- c('Year', 'Month', 'Day')
}
# Generation Data
setwd(datadir1)
gendata <- c()
for (i in 1:16) {
sheetdata <- read_excel(paste(datadir1, "/2000-2024.xlsx", sep = ""), sheet = i)
names(sheetdata) <- c('Year', 'Month', 'State', 'TypeOfProducer', 'EnergySource','Generation_MWh')
gendata <- rbind(gendata, sheetdata)
}
# Population Data
setwd(datadir3)
pop2000_10 <- read.csv('st-est00int-01.csv')
pop2010_20 <- read.csv('nst-est2020.csv')
pop2020_23 <- read.csv('NST-EST2023-POP.csv')
setwd(rdatadir)
save(narrdata, cmip6data, gendata, pop2000_10, pop2020_10, pop2020_23, file = "raw.RData")
save(narrdata, cmip6data, gendata, pop2000_10, pop2010_20, pop2020_23, file = "raw.RData")
save(narrdata, cmip6data, gendata, pop2000_10, pop2010_20, pop2020_23, file = "rawdata.RData")
rm(list=ls())
datadir1 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/EIAelec/monthlygenerationdata_EIA923'
datadir2 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/NARR/CONUS'
datadir3 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/CensusData'
datadir4 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/futureClimate/CMIP6_CONUS'
rdatadir <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/2024_25/papers/RenewableEnergy/fourstates/rdatafiles'
setwd(rdatadir)
load('rawdata.RData')
load('cleaneddata.RData')
View(gendata)
# rename energy source values of interest
gendata$EnergySource[gendata$EnergySource == 'Hydroelectric Conventional'] <- 'Hydropower'
gendata$EnergySource[gendata$EnergySource == 'Solar Thermal and Photovoltaic'] <- 'Solar'
# subset generation data by state
CAdata <- gendata[which(gendata$State == 'CA' & gendata$TypeOfProducer == 'Total Electric Power Industry' & (gendata$EnergySource == 'Hydropower' | gendata$EnergySource == 'Solar' | gendata$EnergySource == 'Wind')),]
NYdata <- gendata[which(gendata$State == 'NY' & gendata$TypeOfProducer == 'Total Electric Power Industry' & (gendata$EnergySource == 'Hydropower' | gendata$EnergySource == 'Solar' | gendata$EnergySource == 'Wind')),]
FLdata <- gendata[which(gendata$State == 'FL' & gendata$TypeOfProducer == 'Total Electric Power Industry' & (gendata$EnergySource == 'Hydropower' | gendata$EnergySource == 'Solar' | gendata$EnergySource == 'Wind')),]
GAdata <- gendata[which(gendata$State == 'GA' & gendata$TypeOfProducer == 'Total Electric Power Industry' & (gendata$EnergySource == 'Hydropower' | gendata$EnergySource == 'Solar' | gendata$EnergySource == 'Wind')),]
CAdata <- dcast(CAdata, Year + Month + State + TypeOfProducer ~ EnergySource)
NYdata <- dcast(NYdata, Year + Month + State + TypeOfProducer ~ EnergySource)
FLdata <- dcast(FLdata, Year + Month + State + TypeOfProducer ~ EnergySource)
GAdata <- dcast(GAdata, Year + Month + State + TypeOfProducer ~ EnergySource)
# remove unnecessary variables
CAdata <- CAdata[,-c(3,4)]; NYdata <- NYdata[,-c(3,4)]; FLdata <- FLdata[,-c(3,4)]; GAdata <- GAdata[,-c(3,4)]
View(stateGENdata)
View(CAdata)
# store as one dataframe
fsgeneration <- list(CAdata, NYdata, FLdata, GAdata)
# combine generation with NARR data
notransformation <- list()
for (i in 1:4) {
notransformation[[i]] <- merge(monthlyNARRdata[[i]], fsgeneration[[i]], by = c('Year','Month'))
}
View(notransformation)
View(alldata)
# set up data w/ Sailor & Munoz De-Trending
sm_detrending <- alldata
View(sm_detrending)
View(gendata)
datadir5 <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/data/EIAelec/powerplantinfo_EIA860'
setwd(datadir5)
filenames <- list.files(pattern="*.xlsx", full.names=F)
i <- 1
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
View(annualdata)
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
View(annualdata)
cols_of_interest <- c('Plant Code', 'Nameplate Capacity (MW)', 'State', 'Energy Source 1', 'Status')
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
View(annualdata)
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
View(annualdata)
annualdata <- annualdata[whicih(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN', | annualdata$`Energy Source 1` == 'WND'),]
annualdata <- annualdata[whicih(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
View(annualdata)
View(annualdata)
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
annualdata <- annualdata %>% group_by(`Plant Code`, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
View(annualdata)
filenames
sapply(strsplit(filenames[i], "."), "[", 2)
sapply(strsplit(filenames[i], "."), "[", 1)
strsplit(filenames[i], ".")
filenames[i]
sub(".*.", "", filenames[i])
filenames[i]
gsub(".xlsx", "", filenames[i])
as.numeric(gsub(".xlsx", "", filenames[i]))
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), length(annualdata))
length(annualdata)
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), nrow(annualdata))
View(annualdata)
capdata <- rbind(capdata, annualdata)
capdata <- c()
capdata <- rbind(capdata, annualdata)
View(capdata)
capdata <- c()
for (i in 1:length(filenames)) {
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
if ('State' %in% names(annualdata)) {
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
} else {
break
}
annualdata <- annualdata(which(annualdata$State == 'CA' | annualdata$State == 'NY' | annualdata$State == 'FL' | annualdata$State == 'GA'))
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), nrow(annualdata))
capdata <- rbind(capdata, annualdata)
}
capdata <- rbind(capdata, annualdata)
capdata <- c()
for (i in 1:length(filenames)) {
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
if ('State' %in% names(annualdata)) {
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
} else {
break
}
annualdata <- annualdata(which(annualdata$State == 'CA' | annualdata$State == 'NY' | annualdata$State == 'FL' | annualdata$State == 'GA'))
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), nrow(annualdata))
capdata <- rbind(capdata, annualdata)
}
capdata <- append(capdata, annualdata)
View(capdata)
capdata <- rbind(capdata, annualdata)
View(capdata)
i <- 1
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
if ('State' %in% names(annualdata)) {
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
} else {
break
}
i <- 4
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
View(annualdata)
if ('State' %in% names(annualdata)) {
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
} else {
break
}
annualdata <- annualdata(which(annualdata$State == 'CA' | annualdata$State == 'NY' | annualdata$State == 'FL' | annualdata$State == 'GA'))
annualdata <- annualdata[which(annualdata$State == 'CA' | annualdata$State == 'NY' | annualdata$State == 'FL' | annualdata$State == 'GA'),]
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), nrow(annualdata))
View(annualdata)
capdata <- rbind(capdata, annualdata)
capdata <- c()
capdata <- rbind(capdata, annualdata)
View(capdata)
i <- 6
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
View(annualdata)
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
View(annualdata)
if ('State' %in% names(annualdata)) {
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
} else {
break
}
annualdata <- annualdata[which(annualdata$State == 'CA' | annualdata$State == 'NY' | annualdata$State == 'FL' | annualdata$State == 'GA'),]
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), nrow(annualdata))
capdata <- rbind(capdata, annualdata)
View(annualdata)
View(capdata)
capdata <- c()
for (i in 1:length(filenames)) {
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
if ('State' %in% names(annualdata)) {
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
} else {
break
}
annualdata <- annualdata[which(annualdata$State == 'CA' | annualdata$State == 'NY' | annualdata$State == 'FL' | annualdata$State == 'GA'),]
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), nrow(annualdata))
capdata <- rbind(capdata, annualdata)
}
filenames
capdata <- c()
for (i in 4:length(filenames)) {
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
annualdata <- annualdata[which(annualdata$State == 'CA' | annualdata$State == 'NY' | annualdata$State == 'FL' | annualdata$State == 'GA'),]
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), nrow(annualdata))
capdata <- rbind(capdata, annualdata)
}
View(capdata)
capdata <- capdata %>% group_by(State, `Energy Source 1`) %>%
summarize(cap_MW = sum(cap_MW))
View(capdata)
capdata <- capdata %>% group_by(State, `Energy Source 1`, year) %>%
summarize(cap_MW = sum(cap_MW))
capdata <- c()
for (i in 4:length(filenames)) {
annualdata <- read_excel(paste(datadir5, '/',filenames[i], sep = ''))
annualdata <- annualdata[,which(names(annualdata) %in% cols_of_interest)]
annualdata <- annualdata[which(annualdata$Status == 'OP'),]
annualdata <- annualdata[which(annualdata$`Energy Source 1` == 'WAT' | annualdata$`Energy Source 1` == 'SUN' | annualdata$`Energy Source 1` == 'WND'),]
annualdata <- annualdata %>% group_by(`Plant Code`, State, `Energy Source 1`) %>%
summarize(cap_MW = sum(`Nameplate Capacity (MW)`))
annualdata <- annualdata[which(annualdata$State == 'CA' | annualdata$State == 'NY' | annualdata$State == 'FL' | annualdata$State == 'GA'),]
annualdata$year <- rep(as.numeric(gsub(".xlsx", "", filenames[i])), nrow(annualdata))
capdata <- rbind(capdata, annualdata)
}
capdata <- capdata %>% group_by(State, `Energy Source 1`, year) %>%
summarize(cap_MW = sum(cap_MW))
View(capdata)
